---

- name: Load organizations from file
  ansible.builtin.set_fact:
    __awx_organizations: "{{ lookup('file', awx_config_path + '/organizations/organizations.yml') | from_yaml }}"

- name: Create AWX organizations  # noqa ignore-errors
  awx.awx.organization:

    # AWX connection & authentication
    controller_config_file: "{{ awx_config_file | default(omit) }}"
    controller_host: "{{ awx_url }}"
    controller_username: "{{ awx_username if awx_token is undefined else omit }}"
    controller_password: "{{ awx_password if awx_token is undefined else omit }}"
    controller_oauthtoken: "{{ awx_token | default(omit) }}"
    validate_certs: "{{ awx_verify_ssl }}"

    # Required parameters
    name: "{{ item.name }}"

    # Optional parameters
    custom_virtualenv: "{{ item.custom_virtualenv | default(omit) }}"
    default_environment: "{{ item.default_environment | default(omit) }}"
    description: "{{ item.description | default(omit) }}"
    galaxy_credentials: "{{ item.galaxy_credentials | default(omit) }}"
    instance_groups: "{{ item.instance_groups | default(omit) }}"
    max_hosts: "{{ item.max_hosts | default(omit) }}"
    new_name: "{{ item.new_name | default(omit) }}"
    notification_templates_approvals: "{{ item.notification_templates_approvals | default(omit) }}"
    notification_templates_error: "{{ item.notification_templates_error | default(omit) }}"
    notification_templates_started: "{{ item.notification_templates_started | default(omit) }}"
    notification_templates_success: "{{ item.notification_templates_success | default(omit) }}"
    state: "{{ item.state | default(omit) }}"

  ignore_errors: "{{ awx_ignore_errors | default(False) }}"  # noqa ignore-errors
  loop: "{{ __awx_organizations }}"
  loop_control:
    label: "{{ item.name }}"

- name: Grant access to specific teams
  awx.awx.role:

    # AWX connection & authentication
    controller_config_file: "{{ awx_config_file | default(omit) }}"
    controller_host: "{{ awx_url }}"
    controller_username: "{{ awx_username if awx_token is undefined else omit }}"
    controller_password: "{{ awx_password if awx_token is undefined else omit }}"
    controller_oauthtoken: "{{ awx_token | default(omit) }}"
    validate_certs: "{{ awx_verify_ssl }}"

    team: "{{ item.1.name }}"
    role: "{{ item.1.role }}"
    organizations:
      - "{{ item.0.name }}"
    state: "{{ item.1.state | default('present') }}"

  loop: >-
    {{
      __awx_organizations
      | selectattr('roles', 'defined')
      | list
      | subelements('roles')
      | selectattr('1.type', 'defined')
      | selectattr('1.type', 'equalto', 'team')
      | list
    }}
  loop_control:
    label: "{{ item.0.name }} -> {{ item.1.name }}"

- name: Grant access to specific users
  awx.awx.role:

    # AWX connection & authentication
    controller_config_file: "{{ awx_config_file | default(omit) }}"
    controller_host: "{{ awx_url }}"
    controller_username: "{{ awx_username if awx_token is undefined else omit }}"
    controller_password: "{{ awx_password if awx_token is undefined else omit }}"
    controller_oauthtoken: "{{ awx_token | default(omit) }}"
    validate_certs: "{{ awx_verify_ssl }}"

    user: "{{ item.1.name }}"
    role: "{{ item.1.role }}"
    organizations:
      - "{{ item.0.name }}"
    state: "{{ item.1.state | default('present') }}"

  loop: >-
    {{
      __awx_organizations
      | selectattr('roles', 'defined')
      | list
      | subelements('roles')
      | selectattr('1.type', 'defined')
      | selectattr('1.type', 'equalto', 'user')
      | list
    }}
  loop_control:
    label: "{{ item.0.name }} -> {{ item.1.name }}"

---

- name: Get all variables file
  ansible.builtin.set_fact:
    group_var_files: "{{ lookup('fileglob', awx_config_path + '/groups/variables/*.json', wantlist=True) }}"

- name: Create AWX groups  # noqa jinja[spacing]
  awx.awx.group:

    # AWX connection & authentication
    controller_config_file: "{{ awx_config_file | default(omit) }}"
    controller_host: "{{ awx_url }}"
    controller_username: "{{ awx_username if awx_token is undefined else omit }}"
    controller_password: "{{ awx_password if awx_token is undefined else omit }}"
    controller_oauthtoken: "{{ awx_token | default(omit) }}"
    validate_certs: "{{ awx_verify_ssl }}"

    # Required parameters
    inventory: "{{ item.inventory }}"
    name: "{{ item.name }}"

    # Optional parameters
    children: "{{ item.children | default([]) }}"
    description: "{{ item.description | default(omit) }}"
    hosts: "{{ item.hosts | default([]) | difference(awx_hosts_non_existing) }}"
    new_name: "{{ item.new_name | default(omit) }}"
    preserve_existing_children: "{{ item.preserve_existing_children | default(omit) }}"
    preserve_existing_hosts: "{{ item.preserve_existing_hosts | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
    variables: >-
      {% set varsfile = awx_config_path + '/groups/variables/' + item.name + '.json' %}
      {%- if group_var_files is search('/' + item.name + '.json') -%}
      {{ lookup('file', varsfile) }}
      {%- else -%}
      {}
      {%- endif -%}

  ignore_errors: "{{ ignore_errors | default(False) }}"  # noqa ignore-errors
  loop: "{{ lookup('file', awx_config_path + '/groups/groups.yml') | from_yaml }}"
  loop_control:
    label:
      - "{{ item.name }}"
